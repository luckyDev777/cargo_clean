version: "3.8"

services:
  test_fastapi:
    build:
      context: .
      dockerfile: Dockerfile
      target: testing

    environment:
      - TEST=1
    ports:
      - "8002:8002"
    env_file:
      - ./.env
    volumes:
      - ./src:/app/src/:rw
    depends_on:
      test_db:
        condition: service_healthy
      test_migrations:
        condition: service_completed_successfully
    networks:
      custom-test-network:

  test_db:
    image: postgres:15.1-alpine
    restart: on-failure
    environment:
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_USER: "postgres"
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d postgres -U postgres"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s
    networks:
      custom-test-network:

  test_cache:
    image: redis:latest
    restart: on-failure
    env_file:
      - ./.env
    ports:
      - "6380:6379"
    networks:
      custom-test-network:

  test_migrations:
    build:
      context: .
      dockerfile: Dockerfile
      target: migration
    environment:
      - TEST=1
    depends_on:
        test_db:
          condition: service_healthy
    volumes:
      - ./alembic.ini:/app/src/alembic.ini:rw
      - ./src/adapters/db/migrations:/app/src/adapters/db/migrations:rw
    restart: on-failure
    networks:
      custom-test-network:


networks:
  custom-test-network:
    driver: bridge
